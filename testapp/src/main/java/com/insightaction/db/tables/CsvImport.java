/**
 * This class is generated by jOOQ
 */
package com.insightaction.db.tables;


import com.insightaction.db.Insightaction;
import com.insightaction.db.Keys;
import com.insightaction.db.tables.records.CsvImportRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CsvImport extends TableImpl<CsvImportRecord> {

	private static final long serialVersionUID = -1226404145;

	/**
	 * The reference instance of <code>insightaction.CSV_IMPORT</code>
	 */
	public static final CsvImport CSV_IMPORT = new CsvImport();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CsvImportRecord> getRecordType() {
		return CsvImportRecord.class;
	}

	/**
	 * The column <code>insightaction.CSV_IMPORT.id</code>.
	 */
	public final TableField<CsvImportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.filename</code>.
	 */
	public final TableField<CsvImportRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.importDate</code>.
	 */
	public final TableField<CsvImportRecord, Timestamp> IMPORTDATE = createField("importDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.processDate</code>.
	 */
	public final TableField<CsvImportRecord, Timestamp> PROCESSDATE = createField("processDate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.status</code>.
	 */
	public final TableField<CsvImportRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.A</code>.
	 */
	public final TableField<CsvImportRecord, String> A = createField("A", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.B</code>.
	 */
	public final TableField<CsvImportRecord, String> B = createField("B", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.C</code>.
	 */
	public final TableField<CsvImportRecord, String> C = createField("C", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.D</code>.
	 */
	public final TableField<CsvImportRecord, String> D = createField("D", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.E</code>.
	 */
	public final TableField<CsvImportRecord, String> E = createField("E", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.F</code>.
	 */
	public final TableField<CsvImportRecord, String> F = createField("F", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.G</code>.
	 */
	public final TableField<CsvImportRecord, String> G = createField("G", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.H</code>.
	 */
	public final TableField<CsvImportRecord, String> H = createField("H", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.I</code>.
	 */
	public final TableField<CsvImportRecord, String> I = createField("I", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.J</code>.
	 */
	public final TableField<CsvImportRecord, String> J = createField("J", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.K</code>.
	 */
	public final TableField<CsvImportRecord, String> K = createField("K", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.L</code>.
	 */
	public final TableField<CsvImportRecord, String> L = createField("L", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.M</code>.
	 */
	public final TableField<CsvImportRecord, String> M = createField("M", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.N</code>.
	 */
	public final TableField<CsvImportRecord, String> N = createField("N", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.O</code>.
	 */
	public final TableField<CsvImportRecord, String> O = createField("O", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.P</code>.
	 */
	public final TableField<CsvImportRecord, String> P = createField("P", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.Q</code>.
	 */
	public final TableField<CsvImportRecord, String> Q = createField("Q", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.R</code>.
	 */
	public final TableField<CsvImportRecord, String> R = createField("R", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.S</code>.
	 */
	public final TableField<CsvImportRecord, String> S = createField("S", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.CSV_IMPORT.T</code>.
	 */
	public final TableField<CsvImportRecord, String> T = createField("T", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>insightaction.CSV_IMPORT</code> table reference
	 */
	public CsvImport() {
		this("CSV_IMPORT", null);
	}

	/**
	 * Create an aliased <code>insightaction.CSV_IMPORT</code> table reference
	 */
	public CsvImport(String alias) {
		this(alias, CSV_IMPORT);
	}

	private CsvImport(String alias, Table<CsvImportRecord> aliased) {
		this(alias, aliased, null);
	}

	private CsvImport(String alias, Table<CsvImportRecord> aliased, Field<?>[] parameters) {
		super(alias, Insightaction.INSIGHTACTION, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CsvImportRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CSV_IMPORT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CsvImportRecord> getPrimaryKey() {
		return Keys.KEY_CSV_IMPORT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CsvImportRecord>> getKeys() {
		return Arrays.<UniqueKey<CsvImportRecord>>asList(Keys.KEY_CSV_IMPORT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CsvImport as(String alias) {
		return new CsvImport(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CsvImport rename(String name) {
		return new CsvImport(name, null);
	}
}
