/**
 * This class is generated by jOOQ
 */
package com.insightaction.db.tables;


import com.insightaction.db.Insightaction;
import com.insightaction.db.Keys;
import com.insightaction.db.tables.records.ProductRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Product extends TableImpl<ProductRecord> {

	private static final long serialVersionUID = -1844343596;

	/**
	 * The reference instance of <code>insightaction.PRODUCT</code>
	 */
	public static final Product PRODUCT = new Product();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProductRecord> getRecordType() {
		return ProductRecord.class;
	}

	/**
	 * The column <code>insightaction.PRODUCT.id</code>.
	 */
	public final TableField<ProductRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.createDate</code>.
	 */
	public final TableField<ProductRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.modifiedDate</code>.
	 */
	public final TableField<ProductRecord, Timestamp> MODIFIEDDATE = createField("modifiedDate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>insightaction.PRODUCT.ProductName</code>.
	 */
	public final TableField<ProductRecord, String> PRODUCTNAME = createField("ProductName", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.classId</code>.
	 */
	public final TableField<ProductRecord, String> CLASSID = createField("classId", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.PRODUCT_CLASS_TYPE_ID</code>.
	 */
	public final TableField<ProductRecord, Integer> PRODUCT_CLASS_TYPE_ID = createField("PRODUCT_CLASS_TYPE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>insightaction.PRODUCT.VENDOR_ID</code>.
	 */
	public final TableField<ProductRecord, Integer> VENDOR_ID = createField("VENDOR_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>insightaction.PRODUCT.CommonCode</code>.
	 */
	public final TableField<ProductRecord, String> COMMONCODE = createField("CommonCode", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.BeverageType</code>.
	 */
	public final TableField<ProductRecord, String> BEVERAGETYPE = createField("BeverageType", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.Size</code>.
	 */
	public final TableField<ProductRecord, String> SIZE = createField("Size", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.Brand</code>.
	 */
	public final TableField<ProductRecord, String> BRAND = createField("Brand", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.CommonCodeName</code>.
	 */
	public final TableField<ProductRecord, String> COMMONCODENAME = createField("CommonCodeName", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.CommonCodeNo</code>.
	 */
	public final TableField<ProductRecord, String> COMMONCODENO = createField("CommonCodeNo", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.Listed_NonListed</code>.
	 */
	public final TableField<ProductRecord, String> LISTED_NONLISTED = createField("Listed_NonListed", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.PackSize</code>.
	 */
	public final TableField<ProductRecord, String> PACKSIZE = createField("PackSize", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.PackSizeInd</code>.
	 */
	public final TableField<ProductRecord, String> PACKSIZEIND = createField("PackSizeInd", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>insightaction.PRODUCT.Bottles</code>.
	 */
	public final TableField<ProductRecord, String> BOTTLES = createField("Bottles", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>insightaction.PRODUCT</code> table reference
	 */
	public Product() {
		this("PRODUCT", null);
	}

	/**
	 * Create an aliased <code>insightaction.PRODUCT</code> table reference
	 */
	public Product(String alias) {
		this(alias, PRODUCT);
	}

	private Product(String alias, Table<ProductRecord> aliased) {
		this(alias, aliased, null);
	}

	private Product(String alias, Table<ProductRecord> aliased, Field<?>[] parameters) {
		super(alias, Insightaction.INSIGHTACTION, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ProductRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PRODUCT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProductRecord> getPrimaryKey() {
		return Keys.KEY_PRODUCT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProductRecord>> getKeys() {
		return Arrays.<UniqueKey<ProductRecord>>asList(Keys.KEY_PRODUCT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ProductRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ProductRecord, ?>>asList(Keys.FK_PRODUCT_CLASS_TYPE, Keys.FK_VENDOR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Product as(String alias) {
		return new Product(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Product rename(String name) {
		return new Product(name, null);
	}
}
